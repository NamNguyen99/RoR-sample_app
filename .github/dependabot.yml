version: 1
update_configs:
  - package_manager: "ruby:bundler"

    # Relative to repository's root
    directory: "/"

    update_schedule: "live"
    # Available schedules:
    # - "live"
    #     Only supported by the following package managers:
    #     - javascript
    #     - ruby:bundler
    #     - php:composer
    #     - rust:cargo
    #     - elixir:hex
    #     - python
    #
    # - "daily"
    # - "weekly"
    # - "monthly"

    # Branch to create pull requests against
    # If blank, Dependabot will use your repo's default branch
    target_branch: "master"

    # default_reviewers:
    #   - "github_username1"
    #   - "github_username2"

    default_assignees:
      - "NamNguyen99"

    # default_labels:
    #   - "existing label to use"

    # Specify which update PRs should be merged automatically
    #
    # For all of the options below Dependabot will wait until all your
    # status checks pass before merging. You can also set working hours
    # for automerging in your Dashboard account settings.
    # automerged_updates:
    #   - match:
    #       dependency_type: "development"
    #       Supported dependency types:
    #       - "development"
    #       - "production"
    #       update_type: "all"
    #       Supported updates to automerge:
    #       - "all"
    #       - "security:patch"
    #       - "semver:patch"
    #       - "semver:minor"
    #       - "in_range"
    #   - match:
    #       dependency_type: "production"
    #       update_type: "semver:patch"
    #   Only top level dependencies can be automerged
    #   - match:
    #       dependency_name: "rspec"
    #       update_type: "all"

    # Specify any dependencies/updates that should be ignored
    #
    # Example: disallow versions above 5.0
    # Alternatively, if the version_requirement field is omitted the dependency will be.
    # ignored entirely.
    # Note: if `ignored_updates` is specified (with values or as an empty array) you will no
    # longer be able to use the `@dependabot ignore this major version` command on PRs,
    # as Dependabot will treat the list of ignores in your config file as canonical. If
    # `ignored_updates`is not specified then you'll be able to use the PR ignore comment
    # as usual.
    # ignored_updates:
    #   - match:
    #       dependency_name: "rails"
    #       version_requirement: ">= 5.0"

    # Specify what updates are allowed
    #
    # Example: allow all security updates, and updates to a specific dependency
    allowed_updates:
      - match:
          update_type: "all"
          dependency_type: "direct"
      - match:
          update_type: "security"
          dependency_type: "indirect"

    # Specify if you want indirect dependency updates
    # Note: Dependabot will always update insecure indirect dependencies
    #
    # Example: update all indirect/sub-dependencies
    # indirect_dependency_updates: "all"
    # Available options:
    # - "all"
    #   Only supported by the following package managers
    #   - "ruby:bundler"
    #   - "go:modules"
    #   - "php:composer"
    #   - "rust:cargo"
    #   - "python"

    # Specify how Dependabot should update your package manifest (e.g.
    # package.json, Gemfile etc) (as opposed to your lockfile)
    #
    # Example: respect the version requirement range defined in your package
    # manfest (e.g. package.json, Gemfile etc) and don't create any updates that
    # are out of range
    version_requirement_updates: "off"
    # Available update strategies:
    # - "off"
    # - "auto": Default (bump versions if an app, widen ranges if a library)
    #    Only supported by the follwing package managers:
    #    - "javascript"
    #    - "ruby:bundler"
    #    - "go:dep"
    #    - "python"
    #    - "php:composer"
    #    - "rust:cargo"
    #    - "elixir:hex"
    #
    # - "widen_ranges": Relax the version requirement when possible
    #    Only supported by the follwing package managers:
    #    - "javascript"
    #    - "go:dep"
    #
    # - "increase_versions": Always increase the version requirement
    #                        to match the new version
    #    Only supported by the follwing package managers:
    #    - "javascript"
    #    - "ruby:bundler"
    #    - "go:dep"
    #
    # - "increase_versions_if_necessary": Increase the version requirement only
    #                                     when required by the new version
    #    Only supported by the follwing package managers:
    #    - "javascript"
    #    - "ruby:bundler"
